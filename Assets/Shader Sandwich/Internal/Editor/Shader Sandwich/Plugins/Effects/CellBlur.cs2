using UnityEngine;
using UnityEditor;
using System.IO;
using System.Collections.Generic;
using System.Collections;
using System;
using System.Linq;
using System.Text.RegularExpressions;
using SU = ShaderUtil;
using System.Xml.Serialization;
using System.Runtime.Serialization;
//using System.Xml;
[System.Serializable]
public class SSESimpleBlur : ShaderEffect{
	public static void Activate(ShaderEffect SE,bool BInputs){
		SE.TypeS = "SSESimpleBlur";
		SE.Name = "Blur/Simple Blur";//+UnityEngine.Random.value.ToString();
		
		SE.Function = "";
		SE.Line = "@Line";
		SE.LinePre = "";

		if (BInputs==true){
			SE.Inputs = new List<ShaderVar>();
			SE.Inputs.Add(new ShaderVar("Blur",0));
		} 
		SE.Inputs[0].Range0 = 0;
		SE.Inputs[0].Range1 = 10;		
		
		SE.WorldPos = false;
		SE.WorldRefl = false;
		SE.WorldNormals = false;		
	}
	public static Color PixelChange(ShaderEffect SE,Color[] OldColors,int X, int Y, int W, int H){
		int XX = (int)(Mathf.Round((float)X/(SE.Inputs[0].Float+1))*(SE.Inputs[0].Float+1));
		int YY = (int)(Mathf.Round((float)Y/(SE.Inputs[0].Float+1))*(SE.Inputs[0].Float+1));
		Color OldColor = OldColors[ShaderUtil.FlatArray(XX,YY,W,H)];
		
		XX = (int)(Mathf.Round((float)X/(SE.Inputs[0].Float+1)+1)*(SE.Inputs[0].Float+1));
		YY = (int)(Mathf.Round((float)Y/(SE.Inputs[0].Float+1)+1)*(SE.Inputs[0].Float+1));
		float DXX = ((float)X/(SE.Inputs[0].Float+1));
		float DYY = ((float)Y/(SE.Inputs[0].Float+1));
		float DXX2 = Mathf.Round((float)X/(SE.Inputs[0].Float+1));
		float DYY2 = Mathf.Round((float)Y/(SE.Inputs[0].Float+1));
		float Distance = Vector2.Distance(new Vector2(DXX,DYY),new Vector2(DXX2,DYY2));
		
		OldColor = Color.Lerp(OldColor,OldColors[ShaderUtil.FlatArray((int)XX,(int)YY,W,H)],Distance);
		
		Color NewColor = OldColor;
		//NewColor.a = OldColor.a;
		return NewColor;
	}
	
	public static string BaseColor(ShaderEffect SE,ShaderLayer SL,string PixCol,string Map){
		if (SL.LayerType.Type == (int)LayerTypes.Texture){
			PixCol = "tex2Dlod("+SL.Image.Input.Get()+",float4("+Map+",0,"+SE.Inputs[0].Get()+"))";
		}
		if (SL.LayerType.Type == (int)LayerTypes.Cubemap){
			PixCol = "texCUBElod("+SL.Cube.Input.Get()+",float4("+Map+","+SE.Inputs[0].Get()+"))";		
		}	
		return PixCol;
	}
}

